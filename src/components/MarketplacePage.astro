---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import { getCollection, getEntry } from 'astro:content';
import Breadcrumbs from './Breadcrumbs.astro';
import TagCloud from './TagCloud.astro';

const { title, description, showCategories = true, breadcrumbItems = [], tags = [], category: currentCategory } = Astro.props;

const categories = await getCollection('marketplace', entry => !entry.id.includes('/'));

const counts: Record<string, number> = {};
for (const category of categories) {
    const templates = await getCollection('marketplace', entry => entry.id.startsWith(category.id) && entry.id.includes('/'));
    counts[category.id] = templates.length;
}

const defaultDescription = "Deploy ready to use " + categories.slice(0, 3).map(c => c.data.name).join(', ') + ", and other apps and services in seconds."
---

<StarlightPage
    frontmatter={{
        title,
        description: description || defaultDescription,
        tableOfContents: false,
        editUrl: 'https://github.com/ptah-sh/ptah-sh.github.io/tree/main/src/content/marketplace',
    }}
    hasSidebar={false}
>      
    {breadcrumbItems.length > 0 && (
        <Breadcrumbs items={breadcrumbItems} />
    )} 

    {tags.length > 0 && (
        <div class="mb-4 not-content">
            <TagCloud tags={tags} />
        </div>
    )}

    {showCategories && (
        <div class="mb-8 bg-gray-50 border border-gray-200 rounded-lg p-4 dark:bg-gray-800 dark:border-gray-700">
            <h3 class="font-semibold mb-2">Filter by Category</h3>
            <div class="grid gap-2 grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5">
                {categories.map(category => (
                    <a href={`/marketplace/${category.id}/`}
                        class:list={[
                            "no-underline block p-2 bg-white border border-gray-200 rounded-lg text-sm transition-all duration-200 hover:shadow-sm dark:bg-gray-700 dark:border-gray-600",
                            {
                                "border-blue-500 shadow-sm bg-blue-50 dark:bg-blue-900": category.id === currentCategory
                            }
                        ]}
                    >
                        <span class:list={[
                            "font-medium",
                            category.id === currentCategory
                                ? "text-blue-700 dark:text-blue-300"
                                : "text-gray-900 dark:text-gray-100"
                        ]}>
                            {category.data.name}
                        </span>
                        <span class:list={[
                            "text-xs ml-1",
                            category.id === currentCategory
                                ? "text-blue-600 dark:text-blue-400"
                                : "text-gray-500 dark:text-gray-400"
                        ]}>
                            ({counts[category.id]})
                        </span>
                    </a>
                ))}
            </div>
        </div>
    )}

    <slot />

    <div class="mt-8">
        <h2>What are 1-Click Apps?</h2>
        <p>Instantly deploy pre-configured applications and services with 1-Click Apps, streamlining your project workflow. Explore how they can enhance your projects.</p>
        <a href="/concepts/services/#1-click-apps" class="btn">Learn About 1-Click Apps</a>
    </div>
</StarlightPage>
